# .github/workflows/ci.yml

name: KMTC CI Pipeline

# This ensures that only the latest commit's workflow runs for a given PR.
# It cancels any runs that are in-progress for the same PR.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    name: Linting and Static Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1

      - name: Cache Poetry virtual environment
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run Pre-Commit Hooks
        run: poetry run pre-commit run --all-files
      
      - name: Run Linters, Formatters, and Type Checker
        run: |
          poetry run isort . --check
          poetry run black . --check
          poetry run flake8 .
          poetry run mypy .

  test:
    name: Test on Python ${{ matrix.python-version }}
    needs: lint # This job will only start if the 'lint' job succeeds
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1

      - name: Cache Poetry virtual environment
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-root
      
      - name: Run Tests with Pytest
        # This command is now fault-tolerant. If pytest finds no tests (exit code 5),
        # the step will succeed. For any other error, it will fail as expected.
        run: |
          poetry run pytest --cov=kmtc_testing --cov-report=xml || \
          if [ $? -eq 5 ]; then
            echo "Pytest exited with code 5: No tests were found. Continuing."
            exit 0
          else
            exit 1
          fi

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: coverage.xml

  security:
    name: Security Scanning
    needs: lint # This job will only start if the 'lint' job succeeds
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1

      - name: Cache Poetry virtual environment
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run Dependency Vulnerability Scan
        run: poetry run pip-audit

      - name: Initialize CodeQL for Security Analysis (SAST)
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3